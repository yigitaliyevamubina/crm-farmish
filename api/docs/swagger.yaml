definitions:
  models.Animal:
    properties:
      animal_type_id:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      disease:
        type: string
      gender:
        type: string
      id:
        type: string
      last_fed_time:
        type: string
      last_watered_time:
        type: string
      name:
        type: string
      updated_at:
        type: string
      weight:
        type: integer
    type: object
  models.AnimalType:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      feeding_interval:
        type: integer
      id:
        type: string
      type:
        type: string
      updated_at:
        type: string
      watering_interval:
        type: integer
    type: object
  models.AnimalTypeCreate:
    properties:
      feeding_interval:
        type: integer
      type:
        type: string
      watering_interval:
        type: integer
    type: object
  models.AnimalsCreate:
    properties:
      animal_type_id:
        type: string
      disease:
        type: string
      gender:
        type: string
      last_fed_time:
        type: string
      last_watered_time:
        type: string
      name:
        type: string
      weight:
        type: integer
    type: object
  models.CreateFeeding:
    properties:
      animal_id:
        type: string
      male_id:
        type: string
    type: object
  models.Feeding:
    properties:
      animal_id:
        type: string
      feeding_time:
        type: string
      id:
        type: string
      male_id:
        type: string
    type: object
  models.FoodWarehouse:
    properties:
      animal_id:
        type: string
      animal_type_id:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      group_feeding:
        type: boolean
      id:
        type: string
      name:
        type: string
      quantity:
        type: integer
      quantity_type:
        type: string
      updated_at:
        type: string
    type: object
  models.FoodWarehouseCreate:
    properties:
      animal_id:
        type: string
      animal_type_id:
        type: string
      group_feeding:
        type: boolean
      name:
        type: string
      quantity:
        type: integer
      quantity_type:
        type: string
    type: object
  models.ListAnimalTypeRes:
    properties:
      animal_types:
        items:
          $ref: '#/definitions/models.AnimalType'
        type: array
      count:
        type: integer
    type: object
  models.ListAnimalsRes:
    properties:
      animals:
        items:
          $ref: '#/definitions/models.Animal'
        type: array
      count:
        type: integer
    type: object
  models.ListFeeding:
    properties:
      count:
        type: integer
      feedings:
        items:
          $ref: '#/definitions/models.Feeding'
        type: array
    type: object
  models.ListFoodWarehouse:
    properties:
      count:
        type: integer
      food_warehouses:
        items:
          $ref: '#/definitions/models.FoodWarehouse'
        type: array
    type: object
  models.ListMedicineWarehouse:
    properties:
      count:
        type: integer
      medicine_warehouses:
        items:
          $ref: '#/definitions/models.MedicineWarehouse'
        type: array
    type: object
  models.MedicineWarehouse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      quantity:
        type: integer
      quantity_type:
        type: string
      updated_at:
        type: string
    type: object
  models.MedicineWarehouseCreate:
    properties:
      name:
        type: string
      quantity:
        type: integer
      quantity_type:
        type: string
    type: object
  models.ResponseError:
    properties:
      data:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  models.StatusRes:
    properties:
      status:
        type: boolean
    type: object
  models.UpdateAnimalReq:
    properties:
      disease:
        type: string
      gender:
        type: string
      id:
        type: string
      last_fed_time:
        type: string
      last_watered_time:
        type: string
      name:
        type: string
      weight:
        type: integer
    type: object
  models.UpdateAnimalTypeReq:
    properties:
      feeding_interval:
        type: integer
      id:
        type: string
      type:
        type: string
      watering_interval:
        type: integer
    type: object
  models.UpdateFoodWarehouseReq:
    properties:
      animal_id:
        type: string
      animal_type:
        type: string
      group_feeding:
        type: boolean
      id:
        type: string
      name:
        type: string
      quantity:
        type: integer
      quantity_type:
        type: string
    type: object
  models.UpdateMedicineWarehouseReq:
    properties:
      id:
        type: string
      name:
        type: string
      quantity:
        type: integer
      quantity_type:
        type: string
    type: object
host: localhost:9050
info:
  contact: {}
  title: CRM Farmish
  version: "1.7"
paths:
  /v1/animal-type:
    delete:
      consumes:
      - application/json
      description: DeleteAnimalTypes - Api for Delete Animal Types
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Animal Types
      tags:
      - Animal Types
    get:
      consumes:
      - application/json
      description: ListAnimalTypes - Api for List Animal Types
      parameters:
      - in: query
        name: delete_status
        type: boolean
      - in: query
        name: limit
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListAnimalTypeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Lis tAnimal Types
      tags:
      - Animal Types
    post:
      consumes:
      - application/json
      description: CreateAnimalTypes - Api for crete Animal Types
      parameters:
      - description: AnimalTypeCreate
        in: body
        name: AnimalTypeCreate
        required: true
        schema:
          $ref: '#/definitions/models.AnimalTypeCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AnimalType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Animal Types
      tags:
      - Animal Types
    put:
      consumes:
      - application/json
      description: UpdateAnimalTypes - Api for Update Animal Types
      parameters:
      - description: UpdateAnimalTypeReq
        in: body
        name: UpdateAnimalTypeReq
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAnimalTypeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AnimalType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Animal Types
      tags:
      - Animal Types
  /v1/animal-type/get:
    get:
      consumes:
      - application/json
      description: GetAnimalTypes - Api for Get Animal Types
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AnimalType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Animal Types
      tags:
      - Animal Types
  /v1/animals:
    delete:
      consumes:
      - application/json
      description: DeleteAnimals - Api for Delete Animals
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Animals
      tags:
      - Animals
    get:
      consumes:
      - application/json
      description: ListAnimals - Api for List Animals
      parameters:
      - in: query
        name: delete_status
        type: boolean
      - in: query
        name: limit
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListAnimalsRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Lis tAnimals
      tags:
      - Animals
    post:
      consumes:
      - application/json
      description: CreateAnimals - Api for crete Animals
      parameters:
      - description: AnimalTypeCreate
        in: body
        name: AnimalTypeCreate
        required: true
        schema:
          $ref: '#/definitions/models.AnimalsCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Animal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Animal s
      tags:
      - Animals
    put:
      consumes:
      - application/json
      description: UpdateAnimals - Api for Update Animals
      parameters:
      - description: UpdateAnimalTypeReq
        in: body
        name: UpdateAnimalTypeReq
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAnimalReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Animal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Animals
      tags:
      - Animals
  /v1/animals/get:
    get:
      consumes:
      - application/json
      description: GetAnimals - Api for Get Animals
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Animal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Animal s
      tags:
      - Animals
  /v1/feeding:
    get:
      consumes:
      - application/json
      description: ListFeedingBy - API for listing feedings
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListFeeding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: List Feeding
      tags:
      - Feeding
    post:
      consumes:
      - application/json
      description: CreateFeeding - Api for crete Feeding
      parameters:
      - description: AnimalTypeCreate
        in: body
        name: AnimalTypeCreate
        required: true
        schema:
          $ref: '#/definitions/models.CreateFeeding'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Animal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Feeding
      tags:
      - Feeding
  /v1/feeding/animal-id:
    get:
      consumes:
      - application/json
      description: ListFeedingByAnimalID - Api for List Feeding By AnimalID
      parameters:
      - in: query
        name: animal_id
        type: string
      - in: query
        name: delete_status
        type: boolean
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListFeeding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: List Feeding By AnimalID
      tags:
      - Feeding
  /v1/feeding/get:
    get:
      consumes:
      - application/json
      description: GetFeeding - Api for Get Feeding
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Feeding'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Feeding
      tags:
      - Feeding
  /v1/food:
    delete:
      consumes:
      - application/json
      description: DeleteFoodWarehouse - Api for Delete FoodWarehouse
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete FoodWarehouse
      tags:
      - Food Warehouse
    get:
      consumes:
      - application/json
      description: ListFoodWarehouse - Api for List FoodWarehouse
      parameters:
      - in: query
        name: delete_status
        type: boolean
      - in: query
        name: limit
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListFoodWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: List Food Warehouse
      tags:
      - Food Warehouse
    post:
      consumes:
      - application/json
      description: CreateFoodWarehouse - Api for crete FoodWarehouse
      parameters:
      - description: FoodWarehouseCreate
        in: body
        name: FoodWarehouseCreate
        required: true
        schema:
          $ref: '#/definitions/models.FoodWarehouseCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FoodWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Food Warehouse
      tags:
      - Food Warehouse
    put:
      consumes:
      - application/json
      description: UpdateFoodWarehouse - Api for Update FoodWarehouse
      parameters:
      - description: UpdateAnimalTypeReq
        in: body
        name: UpdateAnimalTypeReq
        required: true
        schema:
          $ref: '#/definitions/models.UpdateFoodWarehouseReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FoodWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update FoodWarehouse
      tags:
      - Food Warehouse
  /v1/food/get:
    get:
      consumes:
      - application/json
      description: GetFoodWarehouse - Api for Get FoodWarehouse
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.FoodWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Food Warehouse
      tags:
      - Food Warehouse
  /v1/medicine:
    delete:
      consumes:
      - application/json
      description: DeleteMedicineWarehouse - Api for Delete Medicine Warehouse
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Delete Medicine Warehouse
      tags:
      - Medicine Warehouse
    get:
      consumes:
      - application/json
      description: ListMedicineWarehouse - Api for List Medicine Warehouse
      parameters:
      - in: query
        name: delete_status
        type: boolean
      - in: query
        name: limit
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListMedicineWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: List Medicine Warehouse
      tags:
      - Medicine Warehouse
    post:
      consumes:
      - application/json
      description: CreateMedicineWarehouse - Api for crete MedicineWarehouse
      parameters:
      - description: AnimalTypeCreate
        in: body
        name: AnimalTypeCreate
        required: true
        schema:
          $ref: '#/definitions/models.MedicineWarehouseCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MedicineWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Create Medicine Warehouse
      tags:
      - Medicine Warehouse
    put:
      consumes:
      - application/json
      description: UpdateMedicineWarehouse - Api for Update Medicine Warehouse
      parameters:
      - description: UpdateAnimalTypeReq
        in: body
        name: UpdateAnimalTypeReq
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMedicineWarehouseReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MedicineWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Update Medicine Warehouse
      tags:
      - Medicine Warehouse
  /v1/medicine/get:
    get:
      consumes:
      - application/json
      description: GetMedicineWarehouse - Api for Get Medicine Warehouse
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MedicineWarehouse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      summary: Get Medicine Warehouse
      tags:
      - Medicine Warehouse
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
